1. 拉取mysql镜像，终端执行docker pull mysql
2.执行命令 docker run --name mysql-server -e MYSQL_ROOT_PASSWORD=your_password -e MYSQL_DATABASE=mydb -e MYSQL_USER=myuser -e MYSQL_PASSWORD=mypassword --publish 3306:3306 -d mysql:latest --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
--name mysql-server：将容器命名为mysql-server。
-e MYSQL_ROOT_PASSWORD=your_password：设置root用户的密码。
-e MYSQL_DATABASE=mydb：创建一个名为mydb的数据库。
-e MYSQL_USER=myuser：创建一个名为myuser的新用户。
-e MYSQL_PASSWORD=mypassword：为新用户设置密码。
--publish 3306:3306：将容器的3306端口映射到主机的3306端口。
-d mysql:latest：使用最新版本的MySQL镜像。
--character-set-server=utf8mb4：设置服务器的默认字符集为utf8mb4。
--collation-server=utf8mb4_unicode_ci：设置服务器的默认排序规则为utf8mb4_unicode_ci。
3. 执行 docker ps 检查容器状态
4. ipconfig 查看服务器地址
5.新建数据库，密码为2中用户密码
6.将数据迁移至新建数据库
7.修改项目中数据库连接地址和密码
8.执行docker pull openjdk:xxx 
xxx:docker官网中对应项目jdk版本的镜像
9.项目根目录新建Dockerfile文件
10.构建Docker镜像，执行 mvn clean package进行打包生成项目的jar文件，执行 docker build -t name .
name为构建Docker镜像后的名称
111.执行docker run -p 8080:8080 name
-p 8080:8080：将容器的8080端口映射到主机的8080端口
name：9中的name，即生成镜像的项目名称